name: dev workflow

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        python-versions: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-18.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}
          cache: "poetry"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install -vvv --no-interaction --no-root

      - name: Install package
        run: poetry install -vvv --no-interaction

      - name: test with tox
        run: poetry run tox

      - name: list files
        run: ls -l .

      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          files: coverage.xml
